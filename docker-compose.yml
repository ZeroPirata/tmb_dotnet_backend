services:
  postgres:
    image: postgres:17
    container_name: tmb_postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: tmb_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
  
  api:
    container_name: tmb_api
    build:
      context: .
      dockerfile: API/Dockerfile
    restart: always
    ports:
      - "8080:8080"
    environment:
      - API_HOST=api
      - API_PORT=8080
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - AZURE_SERVICE_BUS=${AZURE_SERVICE_BUS}
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  worker:
    container_name: tmb_worker
    build:
      context: .
      dockerfile: Worker/Dockerfile
    restart: always
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - AZURE_SERVICE_BUS=${AZURE_SERVICE_BUS}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  pgadmin:
    image: dpage/pgadmin4
    container_name: tmb_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  ef-tools:
    image: mcr.microsoft.com/dotnet/sdk:9.0
    container_name: tmb_ef_tools
    volumes:
      - .:/src
    working_dir: /src
    environment:
      - API_HOST=api
      - API_PORT=8080
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - postgres
 
  healthchecks-ui:
    image: xabarilcoding/healthchecksui:latest
    container_name: tmb_healthchecks_ui
    ports:
      - "8081:80"
    environment:
      - HealthChecksUI__HealthChecks__0__Name=TMB_API
      - HealthChecksUI__HealthChecks__0__Uri=http://api:8080/health
      - HealthChecksUI__StartupDelay=20 
    depends_on:
      api: 
        condition: service_healthy

volumes:
  postgres_data:
  pgadmin_data:
  rabbitmq_data:
